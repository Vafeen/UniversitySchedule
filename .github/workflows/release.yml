name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      release_tag:
        description: vx.y.z
        required: true
        type: string



jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: 'zulu'
      #     java-version: '17'
      #     java-package: 'jdk'
      #     cache: 'gradle'
      
      # - name: Set up Keystore
      #   run: |
      #     sudo apt update -y || true
      #     sudo apt install -y --no-install-recommends coreutils
      #     mkdir -p $RUNNER_TEMP/keystores
      #     echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > $RUNNER_TEMP/keystores/keystore.jks

      # - name: Build APK
      #   run: | 
      #     ./gradlew assembleRelease


      # - name: Sign APK
      #   run: |
      #     ANDROID_SDK_PATH=$ANDROID_HOME/build-tools/35.0.0/apksigner
      #     $ANDROID_SDK_PATH sign \
      #       --ks $RUNNER_TEMP/keystores/keystore.jks \
      #       --ks-key-alias ${{ secrets.KEY_ALIAS }} \
      #       --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
      #       --key-pass pass:${{ secrets.KEY_PASSWORD }} \
      #       --out university-schedule-signed.apk \
      #       app/build/outputs/apk/release/app-release.apk

      # - name: Skip Signing
      #   run: |
      #     mv app/build/outputs/apk/release/app-release.apk \
      #     university-schedule-signed.apk

      - name: Skip Signing
        run: |
          cat README.md > university-schedule-signed.apk

      - name: Upload APK for Release
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: university-schedule-signed.apk
          compression-level: 5

  release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Changes
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            CHANGE.md
          sparse-checkout-cone-mode: false

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk-artifact
      
      - name: Generate Changelog
        run: |
          cat CHANGE.md > CHANGE.txt
      
      - name: Release 
        uses: softprops/action-gh-release@v2
        with:
          files: |
            university-schedule-signed.apk
          body_path: CHANGE.txt


  # build-and-release:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v2
  #     with:
  #       distribution: 'zulu'
  #       java-version: '17'

  #   - name: Cache Gradle packages
  #     uses: actions/cache@v4
  #     with:
  #       path: |
  #         ~/.gradle/caches
  #         ~/.gradle/wrapper
  #       key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #       restore-keys: |
  #         gradle-${{ runner.os }}-

  #   - name: Build APK
  #     run: ./gradlew assembleRelease

  #   - name: Decode and set up keystore
  #     run: |
  #       echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > /tmp/keystore.jks

  #   - name: Sign APK using apksigner
  #     run: |
  #       ANDROID_SDK_PATH=$ANDROID_HOME/build-tools/35.0.0/apksigner
  #       $ANDROID_SDK_PATH sign \
  #         --ks /tmp/keystore.jks \
  #         --ks-key-alias ${{ secrets.KEY_ALIAS }} \
  #         --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
  #         --key-pass pass:${{ secrets.KEY_PASSWORD }} \
  #         --out app-release-signed.apk \
  #         app/build/outputs/apk/release/app-release.apk

  #   - name: Read release notes
  #     id: get_release_notes
  #     run: |
  #       RELEASE_TITLE=$(head -n 1 release_notes.md | sed 's/^# //')  # Remove leading '#' if present
  #       RELEASE_BODY=$(tail -n +2 release_notes.md)  # Preserve newlines
  #       echo "RELEASE_TITLE=${RELEASE_TITLE}" >> $GITHUB_ENV  # No quotes
  #       echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV  # Start a multi-line variable
  #       echo "${RELEASE_BODY}" >> $GITHUB_ENV  # Append the release body
  #       echo "EOF" >> $GITHUB_ENV  # End the multi-line variable

  #   - name: Create GitHub Release
  #     id: create_release
  #     uses: actions/create-release@v1.1.0
  #     with:
  #       tag_name: ${{ github.ref }}
  #       release_name: ${{ env.RELEASE_TITLE }}
  #       body: ${{ env.RELEASE_BODY }}
  #       draft: false
  #       prerelease: false
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #   - name: Upload APK to Release
  #     uses: actions/upload-release-asset@v1.0.2
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: app-release-signed.apk  # Используйте подписанный APK здесь.
  #       asset_name: app-release.apk
  #       asset_content_type: application/vnd.android.package-archive
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}